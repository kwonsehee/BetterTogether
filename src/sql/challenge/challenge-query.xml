<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
   <entry key="selectList">
      SELECT
      	   RNUM
         , CHALL_NO
         , CHALL_TITLE
         , CHALL_PEOPLE
         , CHALL_DATE
         , FILE_PATH
         , CHALL_CONFIRM
         , CHALL_FREQUENCY
         , CHALL_PERIOD
         , CHALL_PAYMENT
         , CHALL_CONTENT
         , CHALL_COUNT
         , NICKNAME
         , CATE_NAME
         , CHALL_CNT
         , CHALL_START
         , CHALL_STATUS
      FROM 
           CLIST
     WHERE
     	   RNUM BETWEEN ? AND ?
       AND 
       	   CHALL_STATUS = 'N'
   </entry>
   
   <entry key = "selectChall">
      SELECT
           CHALL_NO
         , CHALL_TITLE
         , CHALL_PEOPLE
         , CHALL_DATE
         , FILE_PATH
         , CHALL_CONFIRM
         , CHALL_FREQUENCY
         , CHALL_PERIOD
         , CHALL_PAYMENT
         , CHALL_CONTENT
         , CHALL_COUNT
         , NICKNAME
         , USER_ID
         , CATE_NAME
         , CHALL_CNT
         , CHALL_START
         , CHALL_STATUS
      FROM
          CHALL
          JOIN CHALL_CATEGORY USING(CATE_ID)
          JOIN USER_INFO USING (USER_ID)
      WHERE 
           CHALL_NO = ? 
       AND 
       	   CHALL_STATUS = 'N'
   </entry>
   
   <entry key ="insertChall">
   INSERT
   INTO CHALL
   (
        CHALL_NO
     , CHALL_TITLE
     , CHALL_PEOPLE
     , CHALL_DATE
     , FILE_PATH
     , CHALL_CONFIRM
     , CHALL_FREQUENCY
     , CHALL_PERIOD
     , CHALL_PAYMENT
     , CHALL_CONTENT
     , CHALL_COUNT
     , USER_ID
     , CATE_ID
     , CHALL_CNT
     , CHALL_START
     , CHALL_STATUS
   )
   VALUES
   (
       SEQ_CID.NEXTVAL
     , ?
     , ?
     , SYSDATE
     , ?
     , ?
     , ?
     , ?
     , ?
     , ?
     , ?
     , ?
     , ?
     , DEFAULT
     , ?
     , DEFAULT
   )
   </entry>
   
   <entry key = "getListCount">
   		SELECT
   			  COUNT(*)
   		 FROM 
   		 	  CHALL
   		WHERE
   			  CHALL_STATUS = 'N'
   </entry>
   
   <entry key="getSearchTitleListCount">
   		SELECT
   			  COUNT(*)
   		 FROM 
   		 	  CHALL
   		WHERE
   			  CHALL_TITLE LIKE '%' || ? || '%'
   		  AND CHALL_STATUS = 'N'
   </entry>
   
   <entry key="getSearchCategoryListCount">
   		SELECT
   			  COUNT(*)
   		 FROM
   		 	  CHALL
   		 	  JOIN CATEGORY USING (CATE_ID)
   		WHERE
   			  CATE_NAME LIKE '%' || ? || '%'
   		  AND CHALL_STATUS = 'N'
   </entry>
   
   <entry key="getSearchWriterListCount">
   		SELECT
   		      COUNT(*)
   		 FROM 
   		 	  CHALL
   		 	  JOIN USER_INFO USING (USER_ID)
   		WHERE
   			  NICKNAME LIKE '%' || ? || '%' 
   		  AND CHALL_STATUS = 'N'	  
   </entry>
   
   <entry key="selectSearchTitleListCount">
   		SELECT
	   		   RNUM
	         , CHALL_NO
	         , CHALL_TITLE
	         , CHALL_PEOPLE
	         , CHALL_DATE
	         , FILE_PATH
	         , CHALL_CONFIRM
	         , CHALL_FREQUENCY
	         , CHALL_PERIOD
	         , CHALL_PAYMENT
	         , CHALL_CONTENT
	         , CHALL_COUNT
	         , NICKNAME
	         , CATE_NAME
	         , CHALL_CNT
	         , CHALL_START
	         , CHALL_STATUS
	    FROM
	    	 (SELECT
	    	 			ROWNUM RNUM
	    	 		   , C.*
	    	 		FROM
	    	 			(SELECT
	    	 				   CHALL_NO
	    	 				 , CHALL_TITLE
	    	 				 , CHALL_PEOPLE
	    	 				 , CHALL_DATE
	    	 				 , FILE_PATH
	    	 				 , CHALL_CONFIRM
	    	 				 , CHALL_FREQUENCY
	    	 				 , CHALL_PERIOD
	    	 				 , CHALL_PAYMENT
                			 , CHALL_CONTENT
                			 , CHALL_COUNT
                			 , NICKNAME
                			 , CATE_NAME
                			 , CHALL_CNT
                			 , CHALL_START
                			 , CHALL_STATUS
         				 FROM
         				 	   CHALL
          					   JOIN CHALL_CATEGORY USING(CATE_ID)
          					   JOIN USER_INFO USING (USER_ID)
          				WHERE 
          					   CHALL_TITLE LIKE '%' || ? || '%'
          			      AND  CHALL_STATUS = 'N'
          				ORDER BY
          						 CHALL_NO DESC)
          				 C)
          WHERE
          	   RNUM BETWEEN ? AND ? 
   </entry>
   
   <entry key="selectSearchCategoryListCount">
   SELECT
	   		   RNUM
	         , CHALL_NO
	         , CHALL_TITLE
	         , CHALL_PEOPLE
	         , CHALL_DATE
	         , FILE_PATH
	         , CHALL_CONFIRM
	         , CHALL_FREQUENCY
	         , CHALL_PERIOD
	         , CHALL_PAYMENT
	         , CHALL_CONTENT
	         , CHALL_COUNT
	         , NICKNAME
	         , CATE_NAME
	         , CHALL_CNT
	         , CHALL_START
	         , CHALL_STATUS
	    FROM
	    	 (SELECT
	    	 			ROWNUM RNUM
	    	 		   , C.*
	    	 		FROM
	    	 			(SELECT
	    	 				   CHALL_NO
	    	 				 , CHALL_TITLE
	    	 				 , CHALL_PEOPLE
	    	 				 , CHALL_DATE
	    	 				 , FILE_PATH
	    	 				 , CHALL_CONFIRM
	    	 				 , CHALL_FREQUENCY
	    	 				 , CHALL_PERIOD
	    	 				 , CHALL_PAYMENT
                			 , CHALL_CONTENT
                			 , CHALL_COUNT
                			 , NICKNAME
                			 , CATE_NAME
                			 , CHALL_CNT
                			 , CHALL_START 
                			 , CHALL_STATUS
         				 FROM
         				 	   CHALL
          					   JOIN CHALL_CATEGORY USING(CATE_ID)
          					   JOIN USER_INFO USING (USER_ID)
          				WHERE 
          					   CATE_NAME LIKE '%' || ? || '%'
          				  AND  CHALL_STATUS = 'N'
          				ORDER BY
          						 CHALL_NO DESC)
          				 C)
          WHERE
          	   RNUM BETWEEN ? AND ? 
   
   </entry>
   
   <entry key="selectSearchWriterListCount">
   SELECT
	   		   RNUM
	         , CHALL_NO
	         , CHALL_TITLE
	         , CHALL_PEOPLE
	         , CHALL_DATE
	         , FILE_PATH
	         , CHALL_CONFIRM
	         , CHALL_FREQUENCY
	         , CHALL_PERIOD
	         , CHALL_PAYMENT
	         , CHALL_CONTENT
	         , CHALL_COUNT
	         , NICKNAME
	         , CATE_NAME
	         , CHALL_CNT
	         , CHALL_START
	         , CHALL_STATUS
	    FROM
	    	 (SELECT
	    	 			ROWNUM RNUM
	    	 		   , C.*
	    	 		FROM
	    	 			(SELECT
	    	 				   CHALL_NO
	    	 				 , CHALL_TITLE
	    	 				 , CHALL_PEOPLE
	    	 				 , CHALL_DATE
	    	 				 , FILE_PATH
	    	 				 , CHALL_CONFIRM
	    	 				 , CHALL_FREQUENCY
	    	 				 , CHALL_PERIOD
	    	 				 , CHALL_PAYMENT
                			 , CHALL_CONTENT
                			 , CHALL_COUNT
                			 , NICKNAME
                			 , CATE_NAME
                			 , CHALL_CNT
                			 , CHALL_START
                			 , CHALL_STATUS
         				 FROM
         				 	   CHALL
          					   JOIN CHALL_CATEGORY USING(CATE_ID)
          					   JOIN USER_INFO USING (USER_ID)
          				WHERE 
          					   NICKNAME LIKE '%' || ? || '%'
          				  AND  CHALL_STATUS = 'N'
          				ORDER BY
          						 CHALL_NO DESC)
          				 C)
          WHERE
          	   RNUM BETWEEN ? AND ? 
   
   </entry>
   
   <entry key="increaseCount">
   		UPDATE
   			   CHALL
   	      SET
   	      	   CHALL_CNT = CHALL_CNT + 1
   	     WHERE
   	     	   CHALL_NO = ?
   </entry>
    <entry key="selectCateList">
  		SELECT 
   			RNUM
   		 , CHALL_NO
         , CHALL_TITLE
         , CHALL_PEOPLE
         , CHALL_DATE
         , FILE_PATH
         , CHALL_CONFIRM
         , CHALL_FREQUENCY
         , CHALL_PERIOD
         , CHALL_PAYMENT
         , CHALL_CONTENT
         , CHALL_COUNT
         , NICKNAME
         , CATE_NAME
         , CHALL_CNT
         , CHALL_START
         , CHALL_STATUS
	  FROM
		   (SELECT ROWNUM RNUM,A.*
    		  FROM (SELECT
      	   					CHALL_NO
        				  , CHALL_TITLE
       					  , CHALL_PEOPLE
       					  , CHALL_DATE
       					  , FILE_PATH
       					  , CHALL_CONFIRM
        				  , CHALL_FREQUENCY
     				      , CHALL_PERIOD
       				      , CHALL_PAYMENT
        				  , CHALL_CONTENT
          				  , CHALL_COUNT
        				  , NICKNAME
        				  , CATE_NAME
      				      , CHALL_CNT
          				  , CHALL_START
          				  , CHALL_STATUS
       				   FROM CHALL
          			   JOIN CHALL_CATEGORY USING(CATE_ID)
          			   JOIN USER_INFO USING (USER_ID)
        			  WHERE
           				    CATE_ID= ?
           		        AND CHALL_STATUS = 'N'
        		   ORDER BY CHALL_NO DESC)A)
		WHERE RNUM BETWEEN ? AND ?
   </entry>
   
   <entry key = "getCateListCount">
   		SELECT
   			  COUNT(*)
   		 FROM 
   		 	  CHALL
   		WHERE
   			  CATE_ID= ?
   		  AND CHALL_STATUS = 'N'
   </entry>

   <entry key="updateChallStatus">
   		UPDATE 
   			  CHALL_STATUS
   		   SET
   		  	  CHALL_STATUS = 1
   		 WHERE
   		 	  USER_ID = ? 
   		   AND 
   		   	  CHALL_NO = ?
   </entry>
   
   <entry key="insertChallHits">
   	INSERT
   		INTO CHALL_STATUS
   		(
   			USER_ID
   		  , CHALL_NO
   		  , JOIN_CALL_DATE
   		  , C_HITS
   		)
   		VALUES
   		(
   			?
   		  , ?
   		  , SYSDATE
   		  , 'Y'
   		)
   </entry>
   
   <entry key="selectHits">
   		SELECT
   			  C_HITS
   		 FROM 
   		 	  CHALL_STATUS
   		WHERE
   			  USER_ID = ?
   		   AND
   		      CHALL_NO = ?
   </entry>
   
   <entry key="deleteChallHits">
   		DELETE
   		  FROM CHALL_STATUS
   	     WHERE USER_ID = ? 
   	       AND CHALL_NO = ? 
   
   </entry>
   
   <entry key="selectListChallStatus">
   		SELECT
   			   USER_ID
   			 , CHALL_NO
   			 , CHALL_STATUS
   			 , JOIN_CALL_DATE
   			 , C_HITS
   		FROM
   			 CHALL_STATUS
   </entry>

   
   
  
   
   <entry key="joinPeopleCnt">
   		SELECT 
   			  COUNT(*)
   		 FROM 
   		 	  CHALL_STATUS
   		WHERE 
   		      CHALL_NO = ? 
   		  AND
   		  	  CHALL_STATUS = 1 
   </entry>
   
   <entry key = "selectChallStatus">
   		SELECT
   			  	USER_ID
   			  , CHALL_NO
   			  , CHALL_STATUS
   			  , JOIN_CALL_DATE
   			  , C_HITS
   	      FROM
   	      	   CHALL_STATUS
   	      WHERE
   	      	    CHALL_NO = ? 
   	      	AND 
   	      		USER_ID = ? 
   </entry>
   
   <entry key = "insertChallStatus">
   		INSERT
   		INTO CHALL_STATUS
   		(
   			USER_ID
   		  , CHALL_NO
   		  , JOIN_CALL_DATE
   		  , C_HITS
   		)
   		VALUES
   		(
   			?
   		  , ?
   		  , SYSDATE
   		  , 'N'
   		) 
   
   </entry>
   
   <entry key ="updateHitsStatus">
   		UPDATE
			  CHALL_STATUS 
		  SET
		  	  C_HITS = 'Y'
		WHERE 
			 USER_ID = ?
		  AND
		     CHALL_NO = ? 
		  AND 
		  	 C_HITS = 'N'
   </entry>
   
   <entry key ="selectJoinChallStatus">
   		SELECT
   			  CHALL_STATUS
   		 FROM 
   		 	  CHALL_STATUS
   		WHERE
   			  USER_ID = ?
   		   AND
   		      CHALL_NO = ?
   </entry>
   
   <entry key ="updateHitsStatus1">
   		UPDATE
			  CHALL_STATUS 
		  SET
		  	  C_HITS = 'N'
		WHERE 
			 USER_ID = ?
		  AND
		     CHALL_NO = ? 
		  AND 
		  	 C_HITS = 'Y'
   </entry>
   
   <!-- 우선 CHALL_CONTENT에 1/2/3 구분해두기 (삭제하기!!!!!!!)-->
   <entry key = "getChallTypeListCount">
   		SELECT
   			  COUNT(*)
   		 FROM 
   		 	  CHALL
   		WHERE
   			  CHALL_CONTENT= ? 
   		  AND 
   		   	  CHALL_STATUS = 'N'
   </entry>
   
    <!-- 우선 CHALL_CONTENT에 1/2/3 구분해두기 -->
   <entry key="selectChallBoardType">
       SELECT 
   			RNUM
   		 , CHALL_NO
         , CHALL_TITLE
         , CHALL_PEOPLE
         , CHALL_DATE
         , FILE_PATH
         , CHALL_CONFIRM
         , CHALL_FREQUENCY
         , CHALL_PERIOD
         , CHALL_PAYMENT
         , CHALL_CONTENT
         , CHALL_COUNT
         , NICKNAME
         , CATE_NAME
         , CHALL_CNT
         , CHALL_START
         , CHALL_STATUS
	  FROM
		   (SELECT ROWNUM RNUM,T.*
    		  FROM (SELECT
      	   					CHALL_NO
        				  , CHALL_TITLE
       					  , CHALL_PEOPLE
       					  , CHALL_DATE
       					  , FILE_PATH
       					  , CHALL_CONFIRM
        				  , CHALL_FREQUENCY
     				      , CHALL_PERIOD
       				      , CHALL_PAYMENT
        				  , CHALL_CONTENT
          				  , CHALL_COUNT
        				  , NICKNAME
        				  , CATE_NAME
      				      , CHALL_CNT
          				  , CHALL_START
          				  , CHALL_STATUS
       				   FROM CHALL
          			   JOIN CHALL_CATEGORY USING(CATE_ID)
          			   JOIN USER_INFO USING (USER_ID)
        			  WHERE
           				    CHALL_CONTENT= ?
           			   AND  CHALL_STATUS = 'N'
        		   ORDER BY CHALL_NO DESC)T)
		WHERE RNUM BETWEEN ? AND ?
   </entry>
   
   <entry key="selectTotalPay">
   		SELECT
   			  CHALL_PAYMENT
   	    FROM 
   	    	  CHALL
   	    WHERE CHALL_NO = ?  
   </entry>
   
   <entry key="insertChallPay">
   		INSERT
   			INTO PAYMENT 
   		 	( PAY_NO,
   		 	  PAYMENT,
   		 	  PAYMENT_DATE,
   		 	  PAYMENT_WAY,
   		 	  USER_ID,
   		 	  CHALL_NO
   		 	 )
			VALUES
			( SEQ_PID.NEXTVAL,
			  ?,
			  SYSDATE,
			  ?,
			  ?,
			  ?
			)
   </entry>
   
   

    <entry key="selectTitle">
   		SELECT
   			  CHALL_TITLE
   		 FROM 
   		 	  CHALL
   		WHERE
   		      CHALL_NO = ?
   	</entry>
	<entry key="checkJoin">
		SELECT
			  COUNT(*)
		  FROM
		  	  CHALL_STATUS
		 WHERE
		 	  USER_ID = ?
		  AND CHALL_NO = ?
		  AND CHALL_STATUS = 1
	</entry>
<!-- 회원이 참여하고있는 챌린지 카운트 갯수 -->
	<entry key = "getMyListCount">
   		SELECT
   			  COUNT(*)
   		
		  
            FROM(SELECT CS.USER_ID, CHALL_NO, CS.CHALL_STATUS, JOIN_CALL_DATE, CHALL_TITLE, FILE_PATH, CHALL_PERIOD, CHALL_START,   CASE 
                    WHEN CHALL_START &gt; SYSDATE THEN 0
                    WHEN CHALL_START + (TO_NUMBER(CHALL_PERIOD)*7) &lt; SYSDATE THEN 2
                    ELSE 1
                    END AS STATUS
                     FROM CHALL_STATUS CS
                     JOIN CHALL USING(CHALL_NO)
                     WHERE CS.USER_ID = ?
                      AND CS.CHALL_STATUS != 0)CE
            WHERE CE.STATUS &gt; 0
  	</entry>

	
	<!-- 찜 갯수 구하기 -->
	<entry key="hitsCount">
		SELECT
			  COUNT(*)
		FROM
			  CHALL_STATUS 
		WHERE 
			  C_HITS = 'Y'
		  AND CHALL_NO = ?
	</entry>
	

	<entry key="disabledPost">
  		UPDATE
  			   CHALL
		   SET
		   	   CHALL_STATUS = 'Y'
		 WHERE
		 	   CHALL_NO = ?
  	</entry>


	<!-- 내가 모집한 챌린지 조회 -->
	<entry key="selectMyJoinList">
		SELECT 
			   CHALL_NO,
			   CHALL_TITLE,
			   CHALL_PEOPLE,
			   CHALL_DATE,
			   FILE_PATH,
			   CHALL_CONFIRM,
			   CHALL_FREQUENCY,
			   CHALL_PERIOD,
			   CHALL_PAYMENT,
			   CHALL_CONTENT,
			   CATE_ID,
			   CHALL_START,
			   CHALL_STATUS
		 FROM 
			   CHALL 
		WHERE
			   USER_ID = ?
		  AND
		  	   CHALL_STATUS = 'N' 
	</entry>
	
	<!-- 내가 모집한 챌린지 수정 -->
	<entry key="updateChall">
		UPDATE
			   CHALL
		   SET
		       CHALL_TITLE = ?
		     , CHALL_PEOPLE = ?
		     , CHALL_DATE = SYSDATE
		     , FILE_PATH = ?
		     , CHALL_CONFIRM = ?
		     , CHALL_FREQUENCY = ?
		     , CHALL_PERIOD = ?
		     , CHALL_PAYMENT = ?
		     , CHALL_CONTENT = ?
		     , CHALL_COUNT = ?
		     , USER_ID = ?
		     , CATE_ID = ?
		     , CHALL_CNT = DEFAULT
		     , CHALL_START = ? 
		     , CHALL_STATUS = DEFAULT
		WHERE
			  CHALL_NO = ?
	</entry>
	
	<entry key="deleteChall">
		UPDATE 
			  CHALL
		   SET
		   	  CHALL_STATUS = 'Y'
		 WHERE
		 	  CHALL_NO = ?
	</entry>

	
	
	
	<!-- 챌린지 시작전 select 쿼리문  -->
	<entry key="selectChallBeforeStart">
	 SELECT 
   			RNUM
   		 , CHALL_NO
         , CHALL_TITLE
         , CHALL_PEOPLE
         , CHALL_DATE
         , FILE_PATH
         , CHALL_CONFIRM
         , CHALL_FREQUENCY
         , CHALL_PERIOD
         , CHALL_PAYMENT
         , CHALL_CONTENT
         , CHALL_COUNT
         , NICKNAME
         , CATE_NAME
         , CHALL_CNT
         , CHALL_START
         , CHALL_STATUS
	  FROM
		   (SELECT ROWNUM RNUM,T.*
    		  FROM (SELECT
      	   					CHALL_NO
        				  , CHALL_TITLE
       					  , CHALL_PEOPLE
       					  , CHALL_DATE
       					  , FILE_PATH
       					  , CHALL_CONFIRM
        				  , CHALL_FREQUENCY
     				      , CHALL_PERIOD
       				      , CHALL_PAYMENT
        				  , CHALL_CONTENT
          				  , CHALL_COUNT
        				  , NICKNAME
        				  , CATE_NAME
      				      , CHALL_CNT
          				  , CHALL_START
          				  , CHALL_STATUS
       				   FROM CHALL
          			   JOIN CHALL_CATEGORY USING(CATE_ID)
          			   JOIN USER_INFO USING (USER_ID)
        			  WHERE
                            SYSDATE &lt; CHALL_START
           			   AND  CHALL_STATUS = 'N'
        		   ORDER BY CHALL_NO DESC)T)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	
	<!-- 진행중 챌린지 select -->
	<entry key="selectChallStarting">
	 SELECT 
   			RNUM
   		 , CHALL_NO
         , CHALL_TITLE
         , CHALL_PEOPLE
         , CHALL_DATE
         , FILE_PATH
         , CHALL_CONFIRM
         , CHALL_FREQUENCY
         , CHALL_PERIOD
         , CHALL_PAYMENT
         , CHALL_CONTENT
         , CHALL_COUNT
         , NICKNAME
         , CATE_NAME
         , CHALL_CNT
         , CHALL_START
         , CHALL_STATUS
	  FROM
		   (SELECT ROWNUM RNUM,T.*
    		  FROM (SELECT
      	   					CHALL_NO
        				  , CHALL_TITLE
       					  , CHALL_PEOPLE
       					  , CHALL_DATE
       					  , FILE_PATH
       					  , CHALL_CONFIRM
        				  , CHALL_FREQUENCY
     				      , CHALL_PERIOD
       				      , CHALL_PAYMENT
        				  , CHALL_CONTENT
          				  , CHALL_COUNT
        				  , NICKNAME
        				  , CATE_NAME
      				      , CHALL_CNT
          				  , CHALL_START
          				  , CHALL_STATUS
       				   FROM CHALL
          			   JOIN CHALL_CATEGORY USING(CATE_ID)
          			   JOIN USER_INFO USING (USER_ID)
        			  WHERE
                            SYSDATE BETWEEN CHALL_START AND CHALL_START + (TO_NUMBER(CHALL_PERIOD)*7)
           			   AND  CHALL_STATUS = 'N'
        		   ORDER BY CHALL_NO DESC)T)
		WHERE RNUM BETWEEN ? AND ?	
	</entry>


	<!-- 종료된 챌린지 select -->	
	<entry key="selectChallEnd">
		 SELECT 
   			RNUM
   		 , CHALL_NO
         , CHALL_TITLE
         , CHALL_PEOPLE
         , CHALL_DATE
         , FILE_PATH
         , CHALL_CONFIRM
         , CHALL_FREQUENCY
         , CHALL_PERIOD
         , CHALL_PAYMENT
         , CHALL_CONTENT
         , CHALL_COUNT
         , NICKNAME
         , CATE_NAME
         , CHALL_CNT
         , CHALL_START
         , CHALL_STATUS
	  FROM
		   (SELECT ROWNUM RNUM,T.*
    		  FROM (SELECT
      	   					CHALL_NO
        				  , CHALL_TITLE
       					  , CHALL_PEOPLE
       					  , CHALL_DATE
       					  , FILE_PATH
       					  , CHALL_CONFIRM
        				  , CHALL_FREQUENCY
     				      , CHALL_PERIOD
       				      , CHALL_PAYMENT
        				  , CHALL_CONTENT
          				  , CHALL_COUNT
        				  , NICKNAME
        				  , CATE_NAME
      				      , CHALL_CNT
          				  , CHALL_START
          				  , CHALL_STATUS
       				   FROM CHALL
          			   JOIN CHALL_CATEGORY USING(CATE_ID)
          			   JOIN USER_INFO USING (USER_ID)
        			  WHERE
                            CHALL_START + (TO_NUMBER(CHALL_PERIOD)*7) &lt;= SYSDATE
           			   AND  CHALL_STATUS = 'N'
        		   ORDER BY CHALL_NO DESC)T)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	
	<!-- 시작전 게시물 총 갯수 구하기 -->
	<entry key="getBeforeCnt">
		SELECT
   			  COUNT(*)
   		 FROM 
   		 	  CHALL
   		WHERE
   			  SYSDATE &lt; CHALL_START 
   		  AND 
   		   	  CHALL_STATUS = 'N'
	</entry>
	
	<!-- 진행중 게시물 총 갯수 구하기 -->
	<entry key="getStartCnt">
		SELECT
   			  COUNT(*)
   		 FROM 
   		 	  CHALL
   		WHERE
   			  SYSDATE BETWEEN CHALL_START AND CHALL_START + (TO_NUMBER(CHALL_PERIOD)*7) 
   		  AND 
   		   	  CHALL_STATUS = 'N'
	</entry>	
	
	<!-- 종료된 챌린지 총 갯수 구하기 -->
	<entry key="getEndCnt">
		SELECT
   			  COUNT(*)
   		 FROM 
   		 	  CHALL
   		WHERE
   			  CHALL_START + (TO_NUMBER(CHALL_PERIOD)*7) &lt;= SYSDATE
   		  AND 
   		   	  CHALL_STATUS = 'N'
	</entry>
	

	<entry key="getComfirm">
		SELECT
			  CHALL_CONFIRM
		 FROM
		 	  CHALL
		WHERE
			  CHALL_NO = ?
	
	</entry>
	<entry key="totalCnt">
		SELECT
			   COUNT(*)
		  FROM
		  	   CHALL_STATUS
		 WHERE
		 	   CHALL_NO = ?
		   AND CHALL_STATUS !=0
	
	</entry>
	<entry key="avgTotal">
		SELECT
			   AVG(달성률)
		  FROM (SELECT COUNT(DISTINCT CER_DATE), CHALL_COUNT,CER.USER_ID, COUNT(DISTINCT CER_DATE)/CHALL_COUNT AS 달성률
        		FROM CER
        		JOIN CHALL USING(CHALL_NO)
        		WHERE  CHALL_NO = ?
        		AND CER_STATUS = 'N'
        		GROUP BY CHALL_COUNT, CER.USER_ID)
	</entry>
	<entry key="percent100">
		SELECT
			   COUNT(*)
		  FROM (SELECT COUNT(DISTINCT CER_DATE), CHALL_COUNT,CER.USER_ID, COUNT(DISTINCT CER_DATE)/CHALL_COUNT AS 달성률
        		FROM CER
        		JOIN CHALL USING(CHALL_NO)
        		WHERE  CHALL_NO = ?
        		AND CER_STATUS = 'N'
        		GROUP BY CHALL_COUNT, CER.USER_ID)
		  WHERE 달성률=1
	
	</entry>
	<entry key="percent85">
		SELECT
			   COUNT(*)
		  FROM (SELECT COUNT(DISTINCT CER_DATE), CHALL_COUNT,CER.USER_ID, COUNT(DISTINCT CER_DATE)/CHALL_COUNT AS 달성률
        		FROM CER
        		JOIN CHALL USING(CHALL_NO)
        		WHERE  CHALL_NO = ?
        		AND CER_STATUS = 'N'
        		GROUP BY CHALL_COUNT, CER.USER_ID)
		  WHERE 달성률 &lt; 0.85
	
	</entry>

</properties>